a <- do.call(rbind, taxonomy_subset)
taxonomy[[1]]
ranks <- c(phylum, class, order, family)
ranks <- c('phylum', 'class', 'order', 'family')
tax_subset <- lapply(
taxonomy,
FUN = filter(rank %in% ranks)
)
tax_subset <- lapply(
taxonomy,
FUN = filter(rank == 'phylum')
)
tax_subset <- lapply(taxonomy, function(x) filter(x, rank %in% ranks))
tax_subset <- lapply(taxonomy, function(x) filter(x, rank == 'phylum')
)
View(taxonomy_subset)
tax_subset <- lapply(taxonomy, subset, rank == 'phylum'))
tax_subset <- lapply(taxonomy, filter, rank == 'phylum'))
?lapply
tax_subset <- lapply(taxonomy, filter, rank == 'phylum')
a <- do.call(rbind, taxonomy_subset)
taxonomy_subset[[q]]
taxonomy_subset[[1]]
taxonomy[[1]]
a <- do.call(cbind, taxonomy)
?cbind
taxonomy_subset[[1]]
View(taxa_per_gc)
library(ggplot2)
View(taxa_per_gc)
highGC <- filter(taxa_per_gc, GC_content == "high")
ggplot(taxa_per_gc, aes(x = GC_content, y = count)) +
geom_bar()
taxa_per_gc
highGC
ggplot(highGC, aes(x = Scientific.Name, y=count)) +
geom_bar()
?barplot
barplot(taxa_per_gc)
barplot(taxa_per_gc$count)
barplot(taxa_per_gc$count, names.arg = taxa_per_gc$Scientific.Name)
barplot(taxa_per_gc$count, names.arg = taxa_per_gc$Scientific.Name, las=2)
barplot(highGC$count, names.arg = highGC$Scientific.Name, las=2)
highGC <- taxa_per_gc %>% filter(GC_content == "high") %>% desc(count)
highGC <- taxa_per_gc %>% filter(GC_content == "high") %>% desc(count)
View(highGC)
highGC <- desc(highGC$count)
par(mfrow=c(1,2))
barplot(highGC$count, names.arg = highGC$Scientific.Name, las=2)
barplot(highGC$count, names.arg = highGC$Scientific.Name, las=2)
highGC <- taxa_per_gc %>% filter(GC_content == "high")
highGC <- desc(highGC$count)
highGC <- taxa_per_gc %>% filter(GC_content == "high") %>% arrange(desc(count))
View(highGC)
barplot(highGC$count, names.arg = highGC$Scientific.Name, las=2)
par(mfrow=c(1,2))
barplot(highGC$count, names.arg = highGC$Scientific.Name, las=2)
par(mfrow=c(1,2))
barplot(highGC$count, names.arg = highGC$Scientific.Name, las=2)
par(mfrow=c(2,1))
barplot(highGC$count, names.arg = highGC$Scientific.Name, las=2)
barplot(highGC$count, names.arg = highGC$Scientific.Name, las=2, cex.names = 0.5)
lowGC <- taxa_per_gc %>% filter(GC_content == "low") %>% arrange(desc(count))
barplot(highGC$count, names.arg = highGC$Scientific.Name, las=2, cex.names = 0.5)
barplot(lowGC$count, names.arg = lowGC$Scientific.Name, las=2, cex.names = 0.5)
par(mfrow=c(2,1))
barplot(highGC$count, names.arg = highGC$Scientific.Name, las=2, cex.names = 0.5)
barplot(lowGC$count, names.arg = lowGC$Scientific.Name, las=2, cex.names = 0.5)
rm(highGC_IG005)
rm(highGC_IG006)
rm(highGC_IG007)
rm(highGC_IG008)
rm(lowGC_IG005)
rm(lowGC_IG006)
rm(lowGC_IG007)
rm(lowGC_IG008)
rm(IG005)
rm(gc_IG005)
ggplot(highGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()
ggplot(highGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() + theme(legend.title = element_text(size = 3),
legend.text = element_text(size = 3))
ggplot(highGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() + theme(legend.title = element_text(size = 5),
legend.text = element_text(size = 5))
ggplot(highGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) #+
ggplot(highGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()
# pie plot low GC
ggplot(highGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()
# pie plot low GC
ggplot(lowGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()
write.csv(taxa_per_gc, "output/taxa_per_gc.csv")
d <- read.csv('data/taxa_per_gc_tax.csv')
View(d)
d1 <- d %>% group_by(GC_content, Group) %>% summarise(count=n())
d1
ggplot(d1, aes(x= group, y = count)) +
geom_bar() +
facet_wrap(GC_content)
ggplot(d1, aes(x= group, y = count)) +
geom_bar() +
facet_grid(GC_content)
ggplot(d1, aes(x= group, y = count)) +
geom_bar() +
facet_grid(~GC_content)
ggplot(d1, aes(x= Group, y = count)) +
geom_bar() +
facet_grid(~GC_content)
d <- read.csv('data/taxa_per_gc_tax.csv')
d1 <- d %>% group_by(GC_content, Group) %>% summarise(count=n())
ggplot(d1, aes(x= Group, y = freq)) +
geom_bar() +
facet_grid(~GC_content)
ggplot(d1, aes(x= Group, y = freq)) +
geom_bar() +
facet_grid(~GC_content)
ggplot(d1, aes(x= Group, y = freq)) +
geom_col() +
facet_grid(~GC_content)
ggplot(d1, aes(x= Group, y = d1$freq)) +
geom_col() +
facet_grid(~GC_content)
View(d)
View(d1)
ggplot(d1, aes(x= Group, y = d1$freq)) +
geom_col() +
facet_grid(~GC_content)
facet_grid(~GC_content)
facet_grid(~GC_content)
ggplot(d1, aes(x= Group) +
facet_grid(~GC_content)
ggplot(d1, aes(x= Group)) +
geom_col(freq) +
facet_grid(~GC_content)
ggplot(d1, aes(Group, freq)) +
geom_col("identity") +
facet_grid(.~GC_content)
ggplot(d1, aes(Group, freq)) +
geom_col("identity") +
facet_grid(~GC_content)
ggplot(d1, aes(Group, freq)) +
geom_bar("identity") +
facet_grid(~GC_content)
View(d)
ggplot(d, aes(Group, freq)) +
geom_bar("identity") +
facet_grid(~GC_content)
ggplot(d, mapping = aes(Group, freq)) +
geom_bar("identity") +
facet_grid(~GC_content)
ggplot(d, aes(Group, freq)) +
geom_histogram() +
facet_grid(~GC_content)
ggplot(d, aes(freq)) +
geom_histogram() +
facet_grid(~GC_content)
ggplot(d1, aes(freq)) +
geom_histogram() +
facet_grid(~GC_content)
d1 <- d %>% group_by(GC_content, Group) %>% summarise(count=n())
ggplot(d1, aes(freq)) +
geom_histogram() +
facet_grid(~GC_content)
ggplot(d1, aes(count)) +
geom_histogram() +
facet_grid(~GC_content)
View(d1)
# pie plot high GC
ggplot(highGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()
# pie plot low GC
ggplot(lowGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()
# pie plot low GC
ggplot(lowGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) + labs(title = "Matches of reads with low GC content")
# pie plot low GC
ggplot(lowGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) + labs(title = "Matches of reads with low GC content") +
theme_void()
# pie plot low GC
ggplot(lowGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) + labs(title = "Matches of reads with low GC content") +
theme_void() + guides(shape = guide_legend(override.aes = list(size = 0.5)))
guides(color = guide_legend(override.aes = list(size = 0.5))
# pie plot low GC
ggplot(lowGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) + labs(title = "Matches of reads with low GC content") +
theme_void() + guides(shape = guide_legend(override.aes = list(size = 0.5))) +
guides(color = guide_legend(override.aes = list(size = 0.5)))
addSmallLegend <- function(myPlot, pointSize = 0.5, textSize = 3, spaceLegend = 0.1) {
myPlot +
guides(shape = guide_legend(override.aes = list(size = pointSize)),
color = guide_legend(override.aes = list(size = pointSize))) +
theme(legend.title = element_text(size = textSize),
legend.text  = element_text(size = textSize),
legend.key.size = unit(spaceLegend, "lines"))
}
# pie plot low GC
plot <- ggplot(lowGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) + labs(title = "Matches of reads with low GC content") +
theme_void()
addSmallLegend(plot)
addSmallLegend(plot, pointSize = 1, textSize = 1, spaceLegend = 1)
addSmallLegend(plot, pointSize = 1, textSize = 4, spaceLegend = 1)
addSmallLegend(plot, pointSize = 1, textSize = 5, spaceLegend = 1)
addSmallLegend(plot, pointSize = 1, textSize = 7, spaceLegend = 1)
# pie plot high GC
plot_high <- ggplot(highGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) + labs(title = "Matches of reads with high GC content") +
theme_void()
addSmallLegend(plot_low, pointSize = 1, textSize = 7, spaceLegend = 1)
# pie plot low GC
plot_low <- ggplot(lowGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) + labs(title = "Matches of reads with low GC content") +
theme_void()
addSmallLegend(plot_low, pointSize = 1, textSize = 7, spaceLegend = 1)
addSmallLegend(plot_high, pointSize = 1, textSize = 7, spaceLegend = 1)
#plots with small legends
addSmallLegend(plot_low, pointSize = 1, textSize = 7, spaceLegend = 1)
# pie plot high GC
plot_high <- ggplot(highGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) + labs(title = "Matches of reads with high GC content") +
theme_void()
# pie plot low GC
plot_low <- ggplot(lowGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) + labs(title = "Matches of reads with low GC content") +
theme_void()
#plots with small legends
addSmallLegend(plot_low, pointSize = 1, textSize = 7, spaceLegend = 1)
addSmallLegend(plot_high, pointSize = 1, textSize = 7, spaceLegend = 1)
View(tax)
View(taxonomy_subset)
View(taxonomy)
View(taxa_per_gc)
d <- read.csv('data/taxa_per_gc_tax.csv')
d1 <- d %>% group_by(GC_content, Group) %>% summarise(count=n())
View(d1)
View(d)
write.csv(d1, 'output/big_groups.csv')
View(d)
# Order by Group
d1 <- d %>% group_by(GC_content, Group) %>% summarise(count=n())
ggplot(d1, aes(count)) +
geom_histogram() +
facet_grid(~GC_content)
# Read with 0 values added
d2 <- read.csv('data/big_groups.csv', header = T)
View(d2)
library(viridis)
library(hrbrthemes)
install.packages(hrbrthemes)
install.packages('hrbrthemes')
ggplot(d2, aes(fill=GC_content, y=count, x=Group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Studying 4 species..") +
theme_ipsum() +
xlab("")
library(hrbrthemes)
ggplot(d2, aes(fill=GC_content, y=count, x=Group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Studying 4 species..") +
theme_ipsum() +
xlab("")
ggplot(d2, aes(fill=GC_content, y=count, x=Group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Taxonomic identity of Illumina reads from an Asterella californica field sample") +
theme_ipsum() +
xlab("Taxonomic identity") +
ylab("Number of reads matched by BLAST")
?ggtitle
ggplot(d2, aes(fill=GC_content, y=count, x=Group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Taxonomic identity of Illumina reads from an Asterella californica field sample") +
theme_ipsum() +
xlab("Taxonomic identity") +
ylab("Number of reads matched by BLAST")
ggplot(d2, aes(fill=GC_content, y=count, x=Group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Taxonomic identity of Illumina reads from an Asterella californica field sample") +
theme_void() +
xlab("Taxonomic identity") +
ylab("Number of reads matched by BLAST")
ggplot(d2, aes(fill=GC_content, y=count, x=Group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Taxonomic identity of Illumina reads from an Asterella californica field sample") +
theme_bw() +
xlab("Taxonomic identity") +
ylab("Number of reads matched by BLAST")
ggplot(d2, aes(fill=GC_content, y=count, x=Group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Taxonomic identity of Illumina reads from an Asterella californica field sample") +
theme_ipsum_pub() +
xlab("Taxonomic identity") +
ylab("Number of reads matched by BLAST")
ggplot(d2, aes(fill=GC_content, y=count, x=Group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Taxonomic identity of Illumina reads from an Asterella californica field sample") +
theme_ipsum_pub() +
xlab("Taxonomic identity") +
ylab("Number of reads matched by BLAST")
ggplot(d2, aes(fill=GC_content, y=count, x=Group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Taxonomic identity of Illumina reads from an Asterella californica field sample") +
theme_bw() +
xlab("Taxonomic identity") +
ylab("Number of reads matched by BLAST")
ggplot(d2, aes(fill=GC_content, y=count, x=Group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Taxonomic identity of Illumina reads from an Asterella californica field sample") +
theme_classic() +
xlab("Taxonomic identity") +
ylab("Number of reads matched by BLAST")
ggplot(d2, aes(fill=GC_content, y=count, x=Group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Taxonomic identity of Illumina reads from an Asterella californica field sample") +
theme_light() +
xlab("Taxonomic identity") +
ylab("Number of reads matched by BLAST")
ggplot(d2, aes(fill=GC_content, y=count, x=Group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Taxonomic identity of Illumina reads from an Asterella californica field sample") +
theme_light() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Taxonomic identity") +
ylab("Number of reads matched by BLAST")
ggplot(d2, aes(fill=GC_content, y=count, x=Group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Taxonomic identity of Illumina reads from an Asterella californica field sample") +
theme_light() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.5, hjust=1)) +
xlab("Taxonomic identity") +
ylab("Number of reads matched by BLAST")
ggplot(d2, aes(fill=GC_content, y=count, x=Group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Taxonomic identity of Illumina reads from an Asterella californica field sample") +
theme_light() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.5, hjust=1)) +
ylab("Number of reads matched by BLAST")
?xlab
ggplot(d2, aes(fill=GC_content, y=count, x=Group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Taxonomic identity of Illumina reads from an Asterella californica field sample") +
theme_light() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.5, hjust=1)) +
xlab("") +
ylab("Number of reads matched by BLAST")
ggplot(d2, aes(fill=Group, y=count, x=GC_content)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Taxonomic identity of Illumina reads from an Asterella californica field sample") +
theme_light() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.5, hjust=1)) +
xlab("") +
ylab("Number of reads matched by BLAST")
ggplot(d2, aes(fill=Group, y=count, x=GC_content)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Taxonomic identity of Illumina reads from an Asterella californica field sample") +
theme_light() +
xlab("Reads GC content") +
ylab("Number of reads matched by BLAST")
addSmallLegend(plot_high, pointSize = 1, textSize = 7, spaceLegend = 1)
#Microbiome plot
addSmallLegend(plot_high, pointSize = 1, textSize = 5, spaceLegend = 1)
#Microbiome plot
addSmallLegend(plot_high, pointSize = 0.8, textSize = 5, spaceLegend = 1)
#Microbiome plot
addSmallLegend(plot_high, pointSize = 0.8, textSize = 7, spaceLegend = 1)
?labs
# pie plot high GC
plot_high <- ggplot(highGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) + labs(title = "Matches of reads with high GC content") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5))
#Microbiome plot
addSmallLegend(plot_high, pointSize = 0.8, textSize = 7, spaceLegend = 1)
# pie plot low GC
plot_low <- ggplot(lowGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) + labs(title = "Microbiome composition") +
theme_void()
# pie plot high GC
plot_high <- ggplot(highGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) + labs(title = "Microbiome composition") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5))
# pie plot high GC
plot_high <- ggplot(highGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) + labs(title = "Microbiome composition") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5))
#Microbiome plot
addSmallLegend(plot_high, pointSize = 0.8, textSize = 7, spaceLegend = 1)
ggplot(d2, aes(fill=GC_content, y=count, x=Group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Taxonomic identity of Illumina reads from an Asterella californica field sample") +
theme_light() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.5, hjust=1)) +
xlab("") +
ylab("Number of reads matched by BLAST")
ggplot(d2, aes(fill=Group, y=count, x=GC_content)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Taxonomic identity of Illumina reads from an Asterella californica field sample") +
theme_light() +
xlab("Reads GC content") +
ylab("Number of reads matched by BLAST")
#plotting by taxonomic groups
ggplot(d2, aes(fill=GC_content, y=count, x=Group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Taxonomic identity of Illumina reads from an Asterella californica field sample") +
theme_light() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.5, hjust=1)) +
xlab("") +
ylab("Number of reads matched by BLAST")
#plotting by taxonomic groups
ggplot(d2, aes(fill=GC_content, y=count, x=Group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Taxonomic identity of Illumina reads from an Asterella californica field sample") +
theme_light() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.5, hjust=1)) +
xlab("") +
ylab("Number of reads matched by BLAST") +
theme(plot.title = element_text(hjust = 0.5))
#plotting by taxonomic groups
ggplot(d2, aes(fill=GC_content, y=count, x=Group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
theme_light() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.5, hjust=1)) +
xlab("") +
ylab("Number of reads matched by BLAST") +
#plot by GC content groups
ggplot(d2, aes(fill=Group, y=count, x=GC_content)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
ggtitle("Taxonomic identity of Illumina reads from an Asterella californica field sample") +
theme_light() +
xlab("Reads GC content") +
ylab("Number of reads matched by BLAST")
#plotting by taxonomic groups
ggplot(d2, aes(fill=GC_content, y=count, x=Group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
theme_light() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.5, hjust=1)) +
xlab("") +
ylab("Number of reads matched by BLAST")
# pie plot high GC
plot_high <- ggplot(highGC, aes(x="", y=count, fill=Scientific.Name)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) + labs(title = "Microbiome composition") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5))
#Microbiome plot
addSmallLegend(plot_high, pointSize = 0.8, textSize = 7, spaceLegend = 1)
?scale_color_gradient
colorRampPalette(branch_color)(10000)[01487]
?colorRampPalette
